{"version":3,"sources":["component/BlockWrapper.tsx","utils/styleHelper.js","utils/timeString.js","page/ntpcs.tsx","page/ntpbroadcast.tsx","page/setting.tsx","page/index.ts","App.tsx","reportWebVitals.ts","action/index.ts","reducer/saga.ts","reducer/index.ts","index.tsx"],"names":["BlockWrapper","component","style","props","styleSheet","Object","assign","React","createElement","styleHelper","width","height","padding","display","flexDirection","justifyContent","overflowY","timeString","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","timer","isSending","Ntpcs","useState","Date","sendTime","setSendTime","receiveTime","setReceiveTime","backTime","setBackTime","serverUrl","useSelector","store","serverAddress","config","get","serverPort","handleSubmitClick","clickTime","window","api","ntpcs","then","data","useEffect","clearInterval","title","bordered","column","layout","Item","label","span","type","onClick","marginTop","alignSelf","console","log","setInterval","NtpBroadcast","listening","setListening","dataList","setDataList","bindFunction","useCallback","message","time","key","Math","random","slice","handleClick","ntpbroadcast","subscribe","desubscribe","overflow","header","disabled","dataSource","reverse","renderItem","item","addressReg","portReg","Setting","pages","useStore","getState","dispatch","useDispatch","serverAddressValid","setServerAddressValid","serverPortValid","setServerPortValid","originAddressValid","setOriginAddressValid","receivePortValid","setReceivePortValid","setServerAddress","setServerPort","originAddress","setOriginAddress","receivePort","setReceivePort","feedBack","setFeedBack","isValid","test","trim","handleServerAddressChange","e","str","target","value","handleServerPortChange","handleSubmit","createSettingConfigAction","payload","orientation","validateStatus","hasFeedback","onChange","loading","siderConfig","require","sider","App","siderCollapsed","setSiderCollapsed","menuSelected","setMenuSelected","handleMouseEnterSider","handleMouseLeaveSider","handleMenuClick","obj","begin","flex","Sider","breakpoint","collapsed","trigger","theme","onMouseEnter","onMouseLeave","left","top","selectedKeys","border","map","icon","antIcons","backgroundColor","orange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CONFIG","sagaFunction","sagaConfig","takeEvery","action","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","state","Map","storeConfig","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.269f6941.chunk.js","sourcesContent":["import styleHelper from \"../utils/styleHelper\"\r\nconst BlockWrapper: any = styleHelper(\"div\", {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  padding: \"40px 70px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"start\",\r\n  overflowY: \"auto\"\r\n})\r\nexport default BlockWrapper","import React from 'react'\r\n/**\r\n * \r\n * @param {reactComponent} component \r\n * @param {styleSheet} style \r\n * @returns reactFunctionalComponent\r\n */\r\nconst styleHelper = (component, style: React.CSSProperties) => (props = {}) => {\r\n  const styleSheet = Object.assign({}, style, props.style)\r\n  return React.createElement(component, {...props, style: styleSheet})\r\n}\r\nexport default styleHelper","export default function timeString(date) {\r\n  return '' + date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日 ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ':' + date.getMilliseconds()\r\n}","import React, { useEffect, useState } from 'react'\r\nimport BlockWrapper from \"../component/BlockWrapper\"\r\nimport { Descriptions, Button } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\nimport timeString from \"../utils/timeString\"\r\ninterface NTPCSData {\r\n  receiveTime: Date,\r\n  backTime: Date,\r\n  state: string\r\n}\r\n\r\nlet timer: NodeJS.Timeout\r\nlet isSending = false\r\nfunction Ntpcs() {\r\n  const [sendTime, setSendTime] = useState(new Date())\r\n  const [receiveTime, setReceiveTime] = useState(new Date())\r\n  const [backTime, setBackTime] = useState(new Date())\r\n  const serverUrl = useSelector(store => {\r\n    const serverAddress = store.config.get(\"serverAddress\")\r\n    const serverPort =  store.config.get(\"serverPort\")\r\n    if(serverAddress && serverPort) {\r\n      return serverAddress + ':' + serverPort\r\n    } else return ''\r\n  })\r\n\r\n  const handleSubmitClick = () => {\r\n    const clickTime = new Date()\r\n    window.api.ntpcs(serverUrl).then((data: NTPCSData) => {\r\n      setSendTime(clickTime)\r\n      setReceiveTime(data.receiveTime)\r\n      setBackTime(data.backTime)\r\n    }) \r\n  }\r\n\r\n  const handleConsequenceClick = () => {\r\n    console.log(`isSending? ${isSending}`)\r\n    if(isSending) {\r\n      isSending = false\r\n      clearInterval(timer)\r\n    } else {\r\n      isSending = true\r\n      timer = setInterval(() => {\r\n        handleSubmitClick()\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isSending = false\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <BlockWrapper>\r\n      <Descriptions\r\n        title=\"发送帧\"\r\n        bordered={true}\r\n        column={3}\r\n        layout=\"horizontal\"\r\n      >\r\n        <Descriptions.Item\r\n          label=\"发送时刻\"\r\n          span={3}\r\n        >\r\n          {timeString(sendTime)}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <Descriptions\r\n        title=\"接收帧\"\r\n        bordered={true}\r\n        column={3}\r\n        layout=\"horizontal\"\r\n      >\r\n        <Descriptions.Item\r\n          label=\"接收时刻\"\r\n          span={3}\r\n        >\r\n          {timeString(receiveTime)}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item\r\n          label=\"回送时刻\"\r\n          span={3}\r\n        >\r\n          {timeString(backTime)}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <Button \r\n        type=\"primary\"\r\n        onClick={handleSubmitClick}\r\n        style={{\r\n          marginTop: 50,\r\n          alignSelf: \"start\"\r\n        }}  \r\n      >矫正系统时钟</Button>\r\n      <Button \r\n        type=\"primary\"\r\n        onClick={handleConsequenceClick}\r\n        style={{\r\n          marginTop: 30,\r\n          alignSelf: \"start\"\r\n        }}  \r\n      >连续发起请求</Button>\r\n    </BlockWrapper>\r\n  )\r\n}\r\n\r\nexport default Ntpcs","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { List, Button } from \"antd\"\r\nimport BlockWrapper from \"../component/BlockWrapper\"\r\nimport timeString from \"../utils/timeString\"\r\ninterface BroadcastMessage {\r\n  time: string,\r\n  key: number\r\n}\r\nconst maxItemsOnshow = 9\r\nfunction NtpBroadcast() {\r\n  const [listening, setListening] = useState(false)\r\n  const [dataList, setDataList] = useState<BroadcastMessage[]>([])\r\n\r\n  const bindFunction = useCallback((message: Date) => {\r\n    setDataList((dataList) => [{ time: timeString(message), key: Math.random() * 1000 }, ...dataList].slice(0, maxItemsOnshow))\r\n  }, [])\r\n\r\n  const handleClick = useCallback(() => {\r\n    window.api.ntpbroadcast.subscribe(bindFunction)\r\n    setListening(listening => {\r\n      if(listening) {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    })\r\n  }, [bindFunction])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.api.ntpbroadcast.desubscribe()\r\n    }\r\n  }, [bindFunction])\r\n\r\n  return (\r\n    <BlockWrapper\r\n      style={{\r\n        overflow: \"hidden\"\r\n      }}\r\n    >\r\n      <List\r\n        bordered={true}\r\n        header={\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleClick}\r\n            disabled={listening}\r\n          >开始监听广播</Button>\r\n        }\r\n        dataSource={[...dataList].reverse()}\r\n        renderItem={item => {\r\n          return <List.Item key={item.key}>{item.time}</List.Item>\r\n        }}\r\n      ></List>\r\n    </BlockWrapper>\r\n  )\r\n}\r\nexport default NtpBroadcast","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useStore } from \"react-redux\"\r\nimport { Form, Button, Input, Divider } from 'antd'\r\nimport BlockWrapper from \"../component/BlockWrapper\"\r\n\r\nconst addressReg = /^([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|((https?:\\/\\/)?www\\.([\\S]+\\.)+(com|cn|top|edu)(:[0-9]{1,5})?)$/\r\nconst portReg = /^[0-9]{1,5}$/\r\n\r\nfunction Setting() {\r\n  const store = useStore()\r\n  const config = store.getState().config\r\n  const dispatch = useDispatch()\r\n\r\n  const [serverAddressValid, setServerAddressValid] = useState(false)\r\n  const [serverPortValid, setServerPortValid] = useState(false)\r\n  const [originAddressValid, setOriginAddressValid] = useState(false)\r\n  const [receivePortValid, setReceivePortValid] = useState(false)\r\n\r\n  const [serverAddress, setServerAddress] = useState(config.get(\"serverAddress\"))\r\n  const [serverPort, setServerPort] = useState(config.get(\"serverPort\"))\r\n  const [originAddress, setOriginAddress] = useState(config.get(\"originAddress\"))\r\n  const [receivePort, setReceivePort] = useState(config.get(\"receivePort\"))\r\n\r\n  const [feedBack, setFeedBack] = useState(false)\r\n\r\n  const isValid = useCallback(() => {\r\n    setServerAddressValid(addressReg.test(serverAddress? serverAddress.trim() : ''))\r\n    setServerPortValid(portReg.test(serverPort? serverPort.trim() : ''))\r\n    setOriginAddressValid(addressReg.test(originAddress? originAddress.trim() : ''))\r\n    setReceivePortValid(portReg.test(receivePort? receivePort.trim() : ''))\r\n\r\n    return serverAddressValid &&\r\n    serverPortValid &&\r\n    originAddressValid &&\r\n    receivePortValid\r\n  }, [\r\n    serverAddressValid, \r\n    serverPortValid, \r\n    originAddressValid, \r\n    receivePortValid,\r\n    serverAddress,\r\n    serverPort,\r\n    originAddress,\r\n    receivePort\r\n  ])\r\n\r\n\r\n  const handleServerAddressChange = useCallback((e) => {\r\n    const str = e.target.value\r\n    setServerAddressValid(addressReg.test(str.trim()))\r\n    setServerAddress(str.trim())\r\n  }, [])\r\n  const handleServerPortChange = useCallback((e) => {\r\n    const str = e.target.value\r\n    setServerPortValid(portReg.test(str.trim()))\r\n    setServerPort(str.trim())\r\n  }, [])\r\n  const handleOriginChange = useCallback((e) => {\r\n    const str = e.target.value\r\n    setOriginAddressValid(addressReg.test(str.trim()))\r\n    setOriginAddress(str.trim())\r\n  }, [])\r\n  const handleReceivePortChange = useCallback((e) => {\r\n    const str = e.target.value\r\n    setReceivePortValid(portReg.test(str.trim()))\r\n    setReceivePort(str.trim())\r\n  }, [])\r\n  const handleSubmit = useCallback(() => {\r\n    if(isValid()) {\r\n      dispatch(createSettingConfigAction({\r\n        serverAddress,\r\n        serverPort,\r\n        originAddress,\r\n        receivePort\r\n      }))\r\n      setFeedBack(true)\r\n    }\r\n  }, [\r\n    serverAddress,\r\n    serverPort,\r\n    originAddress,\r\n    receivePort,\r\n    dispatch,\r\n    isValid\r\n  ])\r\n\r\n  const createSettingConfigAction = ({\r\n    serverAddress, \r\n    serverPort, \r\n    originAddress, \r\n    receivePort\r\n  }: {\r\n    [propName: string]: string | undefined\r\n  }): configAction => {\r\n    return {\r\n      type: \"CONFIG\",\r\n      payload: {\r\n        serverAddress, \r\n        serverPort, \r\n        originAddress, \r\n        receivePort\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isValid()\r\n  }, [isValid])\r\n\r\n  return (\r\n    <BlockWrapper>\r\n      <Form>\r\n        <div>\r\n          <Divider orientation=\"left\">\r\n            客户请求模式配置：\r\n          </Divider>\r\n          <Form.Item\r\n            label=\"服务器地址\"\r\n            validateStatus={serverAddressValid ? \"success\" : \"error\"}\r\n            hasFeedback={feedBack}\r\n          >\r\n            <Input\r\n              onChange={handleServerAddressChange}\r\n              value={serverAddress}\r\n            ></Input>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"服务器端口\"\r\n            validateStatus={serverPortValid ? \"success\" : \"error\"}\r\n            hasFeedback={feedBack}\r\n          >\r\n            <Input\r\n              onChange={handleServerPortChange}\r\n              value={serverPort}\r\n            ></Input>\r\n          </Form.Item>\r\n        </div>\r\n        {/* <div>\r\n          <Divider orientation=\"left\">\r\n            广播模式配置：\r\n          </Divider>\r\n          <Form.Item\r\n            label=\"广播来源地址\"\r\n            validateStatus={originAddressValid ? \"success\" : \"error\"}\r\n            hasFeedback={feedBack}\r\n          >\r\n            <Input\r\n              onChange={handleOriginChange}\r\n              value={originAddress}\r\n            ></Input>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"指定接收端口\"\r\n            validateStatus={receivePortValid ? \"success\" : \"error\"}\r\n            hasFeedback={feedBack}\r\n          >\r\n            <Input\r\n              onChange={handleReceivePortChange}\r\n              value={receivePort}\r\n            ></Input>\r\n          </Form.Item>\r\n        </div> */}\r\n        <Button\r\n          type=\"primary\"\r\n          loading={false}\r\n          onClick={handleSubmit}\r\n        >完成设置</Button>\r\n      </Form>\r\n    </BlockWrapper>\r\n  )\r\n}\r\nexport default Setting\r\nexport interface configAction{\r\n  type: \"CONFIG\",\r\n  payload: {\r\n    serverAddress: string | undefined, \r\n    serverPort: string | undefined, \r\n    originAddress: string | undefined, \r\n    receivePort: string | undefined\r\n  }\r\n\r\n}\r\n","import { FunctionComponent } from \"react\"\r\nimport Ntpcs from \"./ntpcs\"\r\nimport NtpBroadcast from \"./ntpbroadcast\"\r\nimport Setting from \"./setting\"\r\n\r\ninterface Pages {\r\n  [propName: string]: FunctionComponent\r\n}\r\nconst pages: Pages = {\r\n  Ntpcs,\r\n  NtpBroadcast,\r\n  Setting\r\n}\r\nexport default pages","import React, { useCallback, useEffect, useState } from 'react'\nimport { Layout, Menu } from \"antd\"\nimport { orange } from \"@ant-design/colors\"\nimport * as antIcons from \"@ant-design/icons\"  // 这里可以写一个 loader 处理一下，把 * 替换成 { application.json } 里面的注册组件\nimport { usedIconNames } from './antd'\n\nimport pages from \"./page\"\n\ninterface SiderConfig {\n  title: string,\n  icon: usedIconNames,\n  key: string\n}\nconst siderConfig: SiderConfig[] = require(\"./application.json\").sider\n\nfunction App() {\n  const [siderCollapsed, setSiderCollapsed] = useState(true)\n  const [menuSelected, setMenuSelected] = useState(siderConfig[0].key)\n\n  const handleMouseEnterSider = useCallback(() => {\n    setSiderCollapsed(false)\n  }, [])\n  const handleMouseLeaveSider = useCallback(() => {\n    setSiderCollapsed(true)\n  }, [])\n  const handleMenuClick = useCallback((obj: any) => {\n    setMenuSelected(obj.key)\n  }, [])\n\n  useEffect(() => {\n    window.api.ntpbroadcast.begin()\n  }, [])\n\n  return (\n    <Layout \n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        flex: 1\n      }}\n    >\n      <Layout.Sider\n        width={150}\n        breakpoint=\"sm\"\n        collapsed={siderCollapsed}\n        trigger={null}\n        theme=\"light\"\n        onMouseEnter={handleMouseEnterSider}\n        onMouseLeave={handleMouseLeaveSider}\n        style={{\n          height: \"100vh\",\n          left: 0,\n          top: 0\n        }}\n      >\n        <Menu\n          onClick={handleMenuClick}\n          selectedKeys={[menuSelected]}\n          style={{\n            border: \"none\"\n          }}\n        >\n          {\n            siderConfig.map((sider) => {\n              return (\n                <Menu.Item \n                  icon={React.createElement(antIcons[sider.icon])}\n                  key={sider.key}\n                >\n                  {sider.title}\n                </Menu.Item>\n              )\n            })\n          }\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          height: \"100vh\",\n          backgroundColor: orange[0]\n        }}\n      >\n        {\n          React.createElement(pages[menuSelected])\n        }\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const TEST = \"TEST\"\r\nconst CONFIG = \"CONFIG\"\r\nexport {\r\n  TEST,\r\n  CONFIG\r\n}","import { takeEvery } from \"redux-saga/effects\"\r\nimport { CONFIG } from \"../action\"\r\nimport { configAction } from \"../page/setting\"\r\nexport default function *sagaFunction() {\r\n  yield takeEvery(CONFIG, sagaConfig)\r\n}\r\nfunction *sagaConfig(action: configAction) {\r\n  // do something to modify the config by window.api\r\n  yield window.api.config(action)\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport { Map } from \"immutable\"\r\nimport { CONFIG } from \"../action\"\r\nimport { storeConfig } from \"../application.json\"\r\nimport  createSagaMiddleware  from \"redux-saga\"\r\nimport sagaFunction from \"./saga\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore(combineReducers({\r\n  config: (state: Map<string, string> = Map({...storeConfig}), action) => {\r\n    switch(action.type) {\r\n      case CONFIG:\r\n        return Map(action.payload)\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n}), applyMiddleware(sagaMiddleware))\r\nsagaMiddleware.run(sagaFunction)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.less';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./reducer\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}